#!/bin/sh

##
# Akula: Proud command namespacer
#
# @authors:
#   Julien Fontanet <julien.fontanet@vates.fr>
##

##
# This file is part of the Akula.
#
# The Portable Shell Library is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# The Akula is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# the Akula.  If not, see <http://www.gnu.org/licenses/>.
##

################################################################################

# Fatal error if an untested command failed.
set -e

# Fatal error if usage of an undefined variable.
set -u

################################################################################

# wln LINE…
wln()
{
	printf '%s\n' "$@"
}

# find_command COMMAND
find_command()
{
	local tmp dir

	tmp=$EXEC_PATH
	while [ "$tmp" ]
	do
		dir=${tmp%%:*}
		tmp=${tmp#*:}

		# Last item of the path.
		[ "$tmp" = "$dir" ] && tmp=

		if [ -x "$dir/$1" ]
		then
			wln "$dir/$1"
			return
		fi
	done

	return 1
}

# list_commands
list_commands()
{
	local tmp dir file

	tmp=$EXEC_PATH
	while [ "$tmp" ]
	do
		dir=${tmp%%:*}
		tmp=${tmp#*:}

		# Last item of the path.
		[ "$tmp" = "$dir" ] && tmp=

		for file in "$dir"/*
		do
			if [ -x "$file" ]
			then
				wln "${file##*/}"
			fi
		done
	done

	return 1
}

# usage
usage()
{
	cat <<EOF
Usage: $AKULA_COMMAND [--exec-path=[<path>]] [--commands]
       $AKULA_COMMAND <command> [<args>]

--commands    Prints the list of available commands.
<command>     Runs the given command with its arguments.
EOF
}

################################################################################

AKULA_COMMAND=${0##*/}
export AKULA_COMMAND

EXEC_PATH=/usr/local/lib/$AKULA_COMMAND/commands:/usr/lib/$AKULA_COMMAND/commands

################################################################################

while [ $# -ne 0 ]
do
	case "$1" in
		'')
			wln "Missing subcommand. Try $AKULA_COMMAND --help" >&2
			return 1
			;;
		--help)
			usage
			return 0
			;;
		--commands)
			list_commands
			return 0
			;;
		--exec-path)
			wln "$EXEC_PATH"
			return
			;;
		--exec-path'='*)
			EXEC_PATH=${1#*=}
			;;
		'-*')
			{
				wln "Unknown option: $1"
				usage
			} >&2
			return 1
			;;
		*)
			AKULA_SUBCOMMAND=$1
			shift
			export AKULA_SUBCOMMAND
			break
	esac

	shift
done

if ! [ "${AKULA_SUBCOMMAND:-}" ]
then
	usage
	return
fi

################################################################################

# Looks for the subcommand.
if ! subcmd=$(find_command "$AKULA_SUBCOMMAND")
then
	wln "$AKULA_COMMAND: Command not found “$AKULA_SUBCOMMAND”" >&2
	return 1
fi

# Execute the subcommand.
exec "$subcmd" "$@"
